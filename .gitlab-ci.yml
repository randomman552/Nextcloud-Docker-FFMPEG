# Use the official docker image.
image: docker:latest
services:
  - docker:dind
variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build-apache
  - build-fpm
  - build-fpm-alpine

# Apache
build-apache:
  stage: build-apache

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY


  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:stable-apache" .
    - docker tag "$CI_REGISTRY_IMAGE:stable-apache" "$CI_REGISTRY_IMAGE:apache" 
    - docker tag "$CI_REGISTRY_IMAGE:stable-apache" "$CI_REGISTRY_IMAGE:stable"
    - docker tag "$CI_REGISTRY_IMAGE:stable-apache" "$CI_REGISTRY_IMAGE:latest"
    - docker push -a $CI_REGISTRY_IMAGE

  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      exists:
        - Dockerfile

#FPM
build-fpm:
  stage: build-fpm

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker build --pull -f Dockerfile.fpm -t "$CI_REGISTRY_IMAGE:stable-fpm" .
    - docker tag "$CI_REGISTRY_IMAGE:stable-fpm" "$CI_REGISTRY_IMAGE:fpm" 
    - docker push -a $CI_REGISTRY_IMAGE

  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      exists:
        - Dockerfile.fpm

#FPM Alpine
build-fpm-alpine:
  stage: build-fpm-alpine

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker build --pull -f Dockerfile.fpm-alpine -t "$CI_REGISTRY_IMAGE:stable-fpm-alpine" .
    - docker tag "$CI_REGISTRY_IMAGE:stable-fpm-alpine" "$CI_REGISTRY_IMAGE:fpm-alpine" 
    - docker push -a $CI_REGISTRY_IMAGE

  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      exists:
        - Dockerfile.fpm-alpine
    
